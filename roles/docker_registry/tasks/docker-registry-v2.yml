---
# Install prerequisites
- name: make sure docker-python RPM is not installed for RedHat
  yum:
    name: docker-python
    state: absent
  when: ansible_os_family == "RedHat"

- name: Install easy_install, python-dev package for Debian
  apt:
    pkg: "{{ item }}"
    state: latest
    update_cache: yes
    cache_valid_time: 3600
  sudo: yes
  with_items:
    - python-dev
    - python-setuptools #easy_install
  when: ansible_os_family == "Debian"

- include: pip.yml

# Install and run docker registry
- stat: path=/var/lib/docker-registry
  register: docker_registry_storage

- name: Prepare Docker Registry Storage
  file:
    path: /var/lib/docker-registry
    state: directory
    mode: 750
  when: not docker_registry_storage.stat.exists #may already exist as a symbolic link

- name: ensure Docker Registry is running
  docker:
    image: "registry:2"
#    memory_limit: 1024MB
    name: registry
    ports:
      - "127.0.0.1:5000:5000"
    env:
      REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY: /registry
    volumes:
      - /var/lib/docker-registry:/registry:rw
    privileged: yes
    state: reloaded
    pull: missing
    restart_policy: always
  register: start_registry

#FIXME  - name: test Docker Registry
#    uri:
#      url: http://localhost:5000/v2/
#      status_code: 200
#      return_content: yes
#    register: test_docker_registry
#    until: test_docker_registry.content == '{}'
#    retries: 5
#    delay: 2

# Secure docker registry
- name: Secure Docker Registry with Nginx for Debian
  apt:
    name: "{{item}}"
    state: latest
  with_items:
    - openssl
  when: ansible_os_family == "Debian"

- name: Secure Docker Registry with Nginx for Redhat
  yum:
    name: "{{item}}"
    state: latest
  with_items:
    - openssl
  when: ansible_os_family == "RedHat"

- name: Install latest passlib with pip
  pip:
    name: passlib
    state: latest
    extra_args: "{{ pip_extra_args }}"

- file: path=/etc/nginx/certs state=directory
  when: docker_registry_with_ssl|bool

- name: stat docker-registry certificate file
  stat: path=/etc/nginx/certs/{{docker_registry_host}}.crt
  register: docker_registry_cert_stat
  when: docker_registry_with_ssl|bool

- name: create server key and certificate
  include: certificate.yml
  when: docker_registry_with_ssl|bool and (not docker_registry_cert_stat.stat.exists)

- htpasswd: path=/etc/nginx/conf.d/registry.htpasswd name={{item.name}} password={{item.password}} owner=root group=root mode=0644
  with_items: docker_registry_users
  register: docker_registry_auth

- template: src=docker-registry-v2.j2 dest=/etc/nginx/conf.d/docker-registry.conf owner=root group=root mode=0644
  register: docker_registry_vhost

- name: check if selinux is enabled
  command: getenforce
  register: selinux_status
  ignore_errors: yes
  changed_when: false

- name: to fix SELinux issue
  shell: setsebool -P httpd_can_network_connect 1
  when: selinux_status.rc != 0

- name: ensure Docker nginx is running
  docker:
    image: nginx:latest
    name: www-registry
    hostname: "{{ docker_registry_host }}"
    ports: "{{docker_registry_ip}}:{{docker_registry_port}}:443"
    links:
      - registry:registry
    volumes:
      - "/var/log/nginx/:/var/log/nginx:rw"
      - "/etc/nginx/conf.d:/etc/nginx/conf.d:ro"
      - "/etc/nginx/certs:/etc/nginx/certs:ro"
    state: reloaded
    restart_policy: always
    privileged: yes
  register: start_nginx
