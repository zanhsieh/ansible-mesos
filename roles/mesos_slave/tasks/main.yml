---
- name: Configure the bind interface
  copy:
    content: "{{ hostvars[inventory_hostname]['ansible_' + bind_interface].ipv4.address }}"
    dest: /etc/mesos-slave/ip
  notify: restart mesos-slave

- name: Configure the hostname
  copy:
    content: "{{ hostvars[inventory_hostname]['ansible_' + bind_interface].ipv4.address }}"
    dest: /etc/mesos-slave/hostname
  notify: restart mesos-slave

- name: Configure the containerizers
  copy:
    content: "docker,mesos"
    dest: /etc/mesos-slave/containerizers
  notify: restart mesos-slave

- name: Configure the container startup time
  copy:
    content: "10mins"
    dest: /etc/mesos-slave/executor_registration_timeout
  notify: restart mesos-slave

- name: Configure wider port ranges to accept requests
  copy:
    content: "ports:[1025-65000]"
    dest: /etc/mesos-slave/resources
  notify: restart mesos-slave

- name: Disable Mesos Master
  service: name=mesos-master state=stopped enabled=no

- name: Enable Mesos Slave
  service: name=mesos-slave state=started enabled=yes

- name: Check if ssl certificate created
  local_action: shell ls ./ssl/*crt
  register: local_certificate
  sudo: yes

#- debug: msg="{{ local_certificate.stdout }}"

- name: Create certificate domain directory
  file: path=/etc/docker/certs.d/{{local_certificate.stdout|group('ssl\/(.*)\.crt', 1)}}:443 state=directory
  when: local_certificate.stdout != ""

- name: Copy certificate to target host
  copy: src=./ssl/{{local_certificate.stdout|group('ssl\/(.*)\.crt', 1)}}.crt dest=/etc/docker/certs.d/{{local_certificate.stdout|group('ssl\/(.*)\.crt', 1)}}:443/ca.crt
  notify: restart docker